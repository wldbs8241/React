{"ast":null,"code":"var _jsxFileName = \"/Users/songjiyoon/Desktop/React/React/react-app/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport TOC from './components/TOC';\nimport Content from './components/Content';\nimport Subject from './components/Subject';\nimport './App.css';\n\n// class type 방식\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  // 랜더 함수보다 먼저 실행되면서 컴포넌트를 초기화 싶은 코드는 constructor 내부에 작성 \n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'read',\n      selected_content_id: 2,\n      subject: {\n        title: 'web',\n        sub: 'world wide web!!'\n      },\n      welcome: {\n        title: 'welcome',\n        desc: 'Hello, React-!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JAVASCRIPT',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n  // 상위 컴포넌트를 하위 컴포넌트로 전달할때 state값으로 -> props 쉽게 가능\n  render() {\n    console.log('render');\n    var _title,\n      _desc = null;\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    } else if (this.state.mode === 'read') {\n      var i = 0;\n      while (i < this.state.contents.length) {\n        var data = this.state.contens[i];\n        if (data.id === this.selected_content_id) i += 1;\n      }\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          alert(\"메세지가 변경되었습니다. 🐯\");\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function () {\n          alert('hi');\n          this.setState({\n            mode: 'read'\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","useState","TOC","Content","Subject","jsxDEV","_jsxDEV","App","constructor","props","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","render","console","log","_title","_desc","i","length","data","contens","className","children","onChangePage","alert","setState","bind","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/songjiyoon/Desktop/React/React/react-app/src/App.js"],"sourcesContent":["import React, {Component, useState} from 'react';\nimport TOC from './components/TOC';\nimport Content from './components/Content';\nimport Subject from './components/Subject';\nimport './App.css';\n\n\n// class type 방식\nclass App extends Component {\n  // 랜더 함수보다 먼저 실행되면서 컴포넌트를 초기화 싶은 코드는 constructor 내부에 작성 \n  constructor(props){\n    super(props);\n    this.state = {\n      mode: 'read',\n      selected_content_id :2,\n      subject: {title:'web', sub:'world wide web!!'},\n      welcome:{title:'welcome', desc: 'Hello, React-!'},\n      contents: [\n        {id:1, title:'HTML', desc:'HTML is for information'},\n        {id:2, title: 'CSS', desc:'CSS is for design'},\n        {id:3, title: 'JAVASCRIPT', desc: 'JavaScript is for interactive'}\n      ],\n    }\n  }\n  // 상위 컴포넌트를 하위 컴포넌트로 전달할때 state값으로 -> props 쉽게 가능\n  render() {\n    console.log('render');\n    var _title, _desc = null;\n    if(this.state.mode === 'welcome'){\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n    }else if (this.state.mode === 'read'){\n      var i = 0;\n      while(i< this.state.contents.length){\n        var data = this.state.contens[i];\n        if(data.id === this.selected_content_id)\n        i+=1\n      }\n      _title = this.state.contents[0].title;\n      _desc = this.state.contents[0].desc;\n    }\n    return (\n      <div className=\"App\">\n        {/* 방법1 */}\n        <Subject \n        title={this.state.subject.title} \n        sub={this.state.subject.sub}\n        onChangePage={function(){\n          alert(\"메세지가 변경되었습니다. 🐯\");\n          this.setState({mode: 'welcome'});\n        }.bind(this)}>\n        </Subject>\n\n        {/* 방법2 */}\n        {/* <header>\n        <h1><a href=\"/\" onClick={function(e){\n            console.log(e);\n            e.preventDefault();\n            this.setState({\n                mode: 'read'\n            });\n        }.bind(this)}>{this.state.subject.title}</a></h1>\n        {this.state.subject.sub}\n      </header> */}\n        <TOC \n          onChangePage={function(){\n            alert('hi')\n            this.setState({mode: 'read'});\n          }.bind(this)}\n          data={this.state.contents}\n        ></TOC>\n        <Content title={_title} desc={_desc}></Content>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}